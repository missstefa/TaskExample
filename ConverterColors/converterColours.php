<?php
Для задания цветов в HTML и CSS используются числа в шестнадцатеричной системе счисления. Чтобы не возникало путаницы в определении системы счисления, перед шестнадцатеричным числом ставят символ решетки #, например, #135278. Обозначение цвета (rrggbb) разбивается на три составляющие, где первые два символа обозначают красную компоненту цвета, два средних — зеленую, а два последних — синюю. Таким образом каждый из трех цветов — красный, зеленый и синий — может принимать значения от 00 до FF в шестнадцатеричной системе исчисления.

src/Solution.php
При работе с цветами часто нужно получить отдельные значения красного, зеленого и синего (RGB) компонентов цвета в десятичной системе исчисления и наоборот. Реализуйте функции rgbToHex и hexToRgb, которые конвертируют цвета в соответствующие представления.

Функция hexToRgb принимает строку с цветом в шестнадцатеричном формате и возвращает массив компонентов.

Функция rgbToHex принимает 3 параметра (цветные компоненты) и возвращает строку.

Примеры:
<?php
hexToRgb('#24ab00'); // ['r' => 36, 'g' => 171, 'b' => 0]

rgbToHex(36, 171, 0); // '#24ab00'

function rgbToHex($r, $g, $b)
{
    $arrayRgb = [];
    $arrayRgb[] = '#';
    (dechex($r) < 9) ? $arrayRgb[] = str_pad(dechex($r), 2, "0", STR_PAD_LEFT) : $arrayRgb[] = dechex($r);
    (dechex($g) < 9) ? $arrayRgb[] = str_pad(dechex($g), 2, "0", STR_PAD_LEFT) : $arrayRgb[] = dechex($g);
    (dechex($b) < 9) ? $arrayRgb[] = str_pad(dechex($b), 2, "0", STR_PAD_LEFT) : $arrayRgb[] = dechex($b);

    $result = implode($arrayRgb);
    return $result;
}

function hexToRgb($hex)
{
    $str = ltrim($hex, "#");
    $arr = str_split($str, 2);
    $arr1 = [];
    $arr1 ['r'] = hexdec($arr[0]);
    $arr1 ['g'] = hexdec($arr[1]);
    $arr1 ['b'] = hexdec($arr[2]);
    return $arr1;
}